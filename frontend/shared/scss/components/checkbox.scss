@use '../base/variables' as *;
@use '../base/text-styles';

$checkbox-border-radius: 5px;

.checkbox-line {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    touch-action: manipulation;
    user-select: none;

    display: inline-block; // needed to not cover whole width, since that might cause accidental clicks
    cursor: pointer;

    > input {
        display: none;
    }

    > div {
        @extend .style-input;

        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: flex-start;
    }

    > div > div:first-child {
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    svg > path {
        stroke-dasharray: 30;
        stroke-dashoffset: 30;
        stroke: currentColor;
        transition: stroke-dashoffset 0.4s 0.1s;
    }

    input:checked + div {
        > div:first-child {
            svg > path {
                stroke-dashoffset: 0;
            }
        }
    }
}

.radio,
.checkbox {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    touch-action: manipulation;
    user-select: none;

    display: block;
    cursor: pointer;

    max-width: 100%;
    width: fit-content; // Prevent clicking on empty space

    > input {
        display: none;
    }

    &.with-text {
        > div {
            padding: 10px 0;
        }
    }

    > div {
        @extend .style-input;

        display: flex;
        flex-direction: row;
        align-items: flex-start;
        justify-content: flex-start;
        position: relative;
        
        > div:first-child {
            width: 20px;
            height: 20px;
            flex-shrink: 0;
            flex-basis: 20px;
            border-radius: $checkbox-border-radius;
            border: $border-width solid $color-border;
            box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.1);
            background: $color-background;
            box-sizing: border-box;
            transition: background-color 0.2s, border-color 0.2s, transform 0.2s;
            display: flex;
            align-items: center;
            justify-content: center;

            svg > path {
                stroke-dasharray: 30;
                stroke-dashoffset: 30;
                stroke: $color-background;
                transition: stroke-dashoffset 0.4s 0.1s;
            }
           
            ~ div {
                margin-left: 15px;
                
                @extend .style-title-list;

                &:empty {
                    margin: 0;
                    min-height: auto;
                }
            }
        }
    }

    > input[type="checkbox"] + div {
        > div:first-child {
            position: relative;
            
            &:after {
                // For indeterminate state
                content: "";
                opacity: 0;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                width: 10px;
                height: 2px;
                background: $color-background;
                border-radius: 2px;
                transition: opacity 0.2s 0s;
            }
        }
    }

    > input[type="radio"] + div {
        > div:first-child {
            border-radius: 11px;

            &::after {
                content: "";
                height: 20px - $border-width * 2;
                width: 20px - $border-width * 2;
                background: $color-background;
                border-radius: calc((20px - $border-width * 2) / 2);
                transition: transform 0.2s;
                transform: scale(1, 1);
            }
        }
    }

    > input:checked + div {
        > div:first-child {
            border: $border-width solid $color-primary;
            background: $color-primary;

            svg > path {
                stroke-dashoffset: 0;
            }
        }
    }

    > input[type="checkbox"]:indeterminate + div {
        > div:first-child {
            border: $border-width solid $color-primary;
            background: $color-primary;

            svg > path {
                stroke-dashoffset: 30;
            }

            &::after {
                opacity: 1;
                transition: opacity 0.2s 0.4s;
            }
        }
    }

    > input[type="radio"]:checked + div {
        > div:first-child {
            &::after {
                transform: scale(0.4, 0.4);
            }
        }
    }

    > input:disabled + div  {
        cursor: not-allowed;

        > div:first-child {
            border: $border-width solid $color-border;
            background: $color-background-shade-darker;

            &:active {
                transform: none;
            }

            svg > path {
                stroke: $color-background-shade;
            }
        }
    }

    > input:disabled:checked + div  {
        > div:first-child {
            border: $border-width solid $color-border;
            background: $color-border;

            svg > path {
                stroke: $color-gray-1;
            }
        }
    }

    @media (max-width: 450px) {
        &.long-text {
            > div  > div:first-child ~ div {
                font-size: 13px;
            }
        }
    }
}

// Extra padding on first
label.style-label {
    + .checkbox,
    + .radio {
        margin-top: 20px;
    }
}

// Checkbox: animate both when active and not checked (because you can disable it)
label:active:not(:has(button:active, select:active, label:active, textarea:active, input:not([type=radio]):not([type=checkbox]):active)) .checkbox, .checkbox:active {
    > input:not(:disabled) + div {
        > div:first-child {
            transform: scale(0.8, 0.8);
        }
    }
}

// Radio: only shrink if not yet checked
label:active:not(:has(button:active, select:active, label:active, textarea:active, input:not([type=radio]):not([type=checkbox]):active)) .radio, .radio:active {
    > input:not(:disabled):not(:checked) + div {
        > div:first-child {
            transform: scale(0.8, 0.8);
        }
    }
}
