@use '../base/variables' as *;
@use '../base/text-styles';
@use '../components/icons' as *;

.inline-link {
    cursor: pointer;

    &, &:hover, &:link, &:active, &:visited {
        color: $color-primary;
        font-weight: $font-weight-semibold;
        text-decoration: none;
    }

    &.secundary {
        &, &:hover, &:link, &:active, &:visited {
            color: $color-gray-4;
        }
    }

    &.error {
        &, &:hover, &:link, &:active, &:visited {
            color: $color-error;
        }
    }

    @media (hover: hover) {
        &:hover {
            opacity: 0.6;
        }
    }

    &:active {
        opacity: 0.4;
    }
}

.icon-spacer {
    margin-right: 5px;
    vertical-align: middle;
}

.button {
    touch-action: manipulation;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    user-select: none;
    cursor: pointer;
    color: inherit;
    //contain: style paint;

    &:link, &:visited, &:active, &:hover {
        text-decoration: none;
    }

    &.simple {
         &:active {
            opacity: 0.4;
        }
    }

    &.primary, &.secundary, &.destructive {
        @extend .style-button;

        border-radius: $border-radius;
        
        transition: transform 0.2s, opacity 0.2s;

        height: 42px;
        padding: 0 27px;

        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;

        text-align: center;
        align-items: center;
        justify-content: center;
        display: inline-flex;

        // Ignore stretch when a button is directly inside the main of st-view (which has display flex)
        .st-view > main > & {
            align-self: flex-start;
        }

        &:active {
            transform: scale(0.95, 0.95);
        }

        &:disabled, &.disabled {
            color: $color-gray-2;
            background: $color-background-shade;
            box-shadow: none;
            cursor: not-allowed;

            &:active {
                transform: none;
            }
        }

        > .icon, > .bubble {
            align-self: center;
            
            &:first-child {
                margin-right: 10px;
                margin-left: -5px;
            }

            &:last-child {
                margin-left: 10px;
                margin-right: -5px;
            }

            
        }

        &.full {
            width: 100%;
        }
    }

    &.primary {
        color: $color-primary-contrast;
        background: $color-primary;

        &.focus-visible {
            // Create a hight contrast selection state, by adding multiple box shadows, to create a white border
            box-shadow: 0 0 0 2px var(--color-current-background, #{$color-background}), 0 0 0 4px $color-primary;
        }

        // Some weird thing in SCSS doesn't allow to combine this with the one above (it stops working)
        &:focus-visible {
            // Create a hight contrast selection state, by adding multiple box shadows, to create a white border
            box-shadow: 0 0 0 2px var(--color-current-background, #{$color-background}), 0 0 0 4px $color-primary;
        }

        .dropdown-text {
            flex-grow: 1;
            margin-right: -40px;
            padding-right: 40px;
        }

        > .bubble {
            @extend .style-bubble;
            background: $color-background;
            color: $color-primary;
        }

        .dropdown {
            position: relative;

            &:after {
                left: -$border-width;
                top: 0;
                bottom: 0;
                position: absolute;
                content: "";
                background: currentColor;
                opacity: 0.5;
                width: $border-width;
            }
            font-size: 24px;
            width: 40px;
            height: 42px;
            line-height: 42px;
            align-self: stretch;
            margin-right: -27px;
            margin-left: 27px - $border-width;

            @media (hover: hover) {
                &:hover {
                    background-color: rgba($color-background, 0.2);
                }
            }
        }
    }

    &.destructive {
        color: white;
        background: $color-error;

        &.focus-visible {
            // Create a hight contrast selection state, by adding multiple box shadows, to create a white border
            box-shadow: 0 0 0 2px var(--color-current-background, #{$color-background}), 0 0 0 4px $color-error;
        }

        // Some weird thing in SCSS doesn't allow to combine this with the one above (it stops working)
        &:focus-visible {
            // Create a hight contrast selection state, by adding multiple box shadows, to create a white border
            box-shadow: 0 0 0 2px var(--color-current-background, #{$color-background}), 0 0 0 4px $color-error;
        }
    }

    &.secundary {
        color: $color-dark;
        
        background: $color-gray-3;

        &.focus-visible {
            // Create a hight contrast selection state, by adding multiple box shadows, to create a white border
            box-shadow: 0 0 0 2px var(--color-current-background, #{$color-background}), 0 0 0 4px $color-gray-1;
        }

        // Some weird thing in SCSS doesn't allow to combine this with the one above (it stops working)
        &:focus-visible {
            // Create a hight contrast selection state, by adding multiple box shadows, to create a white border
            box-shadow: 0 0 0 2px var(--color-current-background, #{$color-background}), 0 0 0 4px $color-gray-1;
        }

        &.green {
            color: $color-success-dark;
            background: $color-success-background;
        }

        &.danger {
            color: $color-error-dark;
            background: $color-error-background;
        }
    }

    &.secundary, &.primary, &.text, &.destructive {
        &> span {
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;

            &.icon {
                text-overflow: clip;
                flex-shrink: 0;
            }
        }
    }

    &.tooltip-only {
        cursor: help;
    }

    &.icons {
        @extend .style-button-small;
        color: $color-gray-4;
        
        // Multiple icons stacked after each other
        display: flex;
        flex-direction: row;
        align-items: center;
        // note: if you need overflow ellipsis, please use a <span> inside of the button.
        // we need to overflow for the breakout region
        overflow: visible; 
        white-space: nowrap;
        transition: opacity 0.2s ease-out, color 0.2s;
        position: relative;
        z-index: 1;

        &:after {
            // Increase touch area by 15pixels
            content: '';
            position: absolute;
            top: -5px;
            left: -10px;
            right: -10px;
            bottom: -5px;
        }

        &:active {
            opacity: 0.15;
            transition: opacity 0s, color 0.2s;
        }

        &.enabled {
            &:after {
                content: "";
                position: absolute;
                left: 0px;
                right: 0px;
                height: 34px;
                top: 50% !important;
                bottom: auto !important;
                transform: translate(0%, -50%);
                background-color: var(--color-current-background-shade, #{$color-background-shade});
                border-radius: $border-radius;
                z-index: -1;
                will-change: opacity;
                opacity: 1;
                transition: opacity 0.2s cubic-bezier(0.0, 0.0, 0.2, 1);

                // Inner shadow
                box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.3);
            }
        }

        &:is(a), &:is(button), label & {
            @media (pointer: coarse) {
                &:before {
                    transition: opacity 0.2s ease-out;
                }

                &:active {
                    &:before {
                        opacity: 0.15;
                        transition: opacity 0s;
                    }
                }
            }

            @media (pointer: fine) {
                opacity: 1;

                &:after {
                    content: "";
                    position: absolute;
                    left: 0px;
                    right: 0px;
                    height: 34px;
                    top: 50% !important;
                    bottom: auto !important;
                    transform: translate(0%, -50%);
                    background-color: var(--color-current-background-shade, #{$color-background-shade});
                    border-radius: $border-radius;
                    z-index: -1;
                    will-change: opacity;
                    opacity: 0;
                    transition: opacity 0.2s cubic-bezier(0.0, 0.0, 0.2, 1);
                }

                &:before {
                    transition: color 0.2s ease-out;
                }

                &:active {
                    &:before {
                        color: $color-dark;
                        transition: color 0s;
                    }
                }

                &:before {
                    z-index: 1;
                }

                &.active, &:hover, &:active {
                    &:after {
                        opacity: 1;
                        transform: translate(0%, -50%);
                        transition: opacity 0.2s cubic-bezier(0.0, 0.0, 0.2, 1);
                    }
                }

                &:active {
                    &:after {
                        background-color: $color-gray-3;
                    }
                }
                
            }
        }
    }

    &.text, &.navigation {
        @extend .style-button-small;
        color: $color-gray-4;
        text-overflow: ellipsis;
        
        //display: inline-block;
        //vertical-align: middle;
        display: flex;
        flex-direction: row;
        align-items: center;

        &.error {
            color: $color-error;
        }

        &.inline {
            display: inline-flex;
        }

        > span {
            min-width: 0;
        }

        &:not(.column) > .icon:not(.dot) {
            flex-shrink: 0;

            &:first-child {
                margin-right: 7px;
            }

            &:last-child {
                margin-left: 7px;
            }
        }

        // note: if you need overflow ellipsis, please use a <span> inside of the button.
        // we need to overflow for the breakout region
        overflow: visible; 

        height: 34px;
        line-height: 34px;
        white-space: nowrap;
        transition: opacity 0.2s ease-out, color 0.2s;
        position: relative;
        max-width: 100%;

        &.reduce-height {
            height: 24px;
            line-height: 24px;
        }

        &:after {
            // Increase touch area by 15pixels
            content: '';
            position: absolute;
            top: -5px;
            left: -10px;
            right: -10px;
            bottom: -5px;
        }

        &.increase-click-area:after {
            // Increase touch area by 15pixels
            content: '';
            position: absolute;
            top: -10px;
            left: -20px;
            right: -20px;
            bottom: -10px;
        }


        &.navigation:last-child:after {
            right: -20px;
        }

        &.navigation:first-child:after {
            left: -20px;
        }

        &.small {
            font-size: 12px;

            @media (max-width: 600px) {
                &.column {
                    font-size: 10px;
                }
            }
        }

        &.selected {
            color: $color-primary;
        }

        &.unbold {
            font-weight: $font-weight-medium;
        }
        
        &.inherit-color {
            color: inherit;
        }

        > * {
            vertical-align: top;
        }

        > .bubble {
            @extend .style-bubble;

            &:last-child {
                margin-left: 8px;
            }
        }

        &.column {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: auto;
            line-height: 1;
            position: relative;
            overflow: visible;

            > span {
                margin-bottom: 7px;
            }

            > .bubble, > .style-bubble {
                background: $color-error;
                position: absolute;
                left: 50%;
                top: 0;
                transform: translate(calc(12px - 20%), -20%);
            }
        }

        @media (hover: hover) {
            &:hover {
                opacity: 0.5;
                transition: opacity 0s, color 0.2s;

                &.selected {
                    opacity: 1;
                }
            }
        }

        &:active {
            opacity: 0.15;
            transition: opacity 0s, color 0.2s;

            &.selected {
                opacity: 0.15;
            }
        }

        @media (max-width: 600px) {
            &.limit-space {
                overflow: visible;
                
                span:not(.icon) {
                    display: none
                }
            }
        }

        &:disabled, &.disabled {
            color: $color-gray-2;
            box-shadow: none;
            cursor: not-allowed;

            &:active {
                transform: none;
            }
        }
    }

    &.icon {
        color: $color-gray-4;
        transition: opacity 0.2s ease-out, color 0.2s ;
        overflow: visible; // fix for breakout region
        position: relative;

        &.selected {
            color: $color-primary;
        }

        body.native-iOS .st-navigation-bar &, body.web-iOS .st-navigation-bar & {
            color: $color-primary;
        }

        body.native-android .st-navigation-bar &, body.web-android .st-navigation-bar & {
            color: $color-dark;
        }

        &.red {
            color: $color-error;
        }

        &.enabled {
            &:after {
                content: "";
                position: absolute;
                left: 50% !important;
                right: auto !important;
                width: 34px;
                height: 34px;
                top: 50% !important;
                bottom: auto !important;
                background-color: var(--color-current-background-shade, #{$color-background-shade});
                border-radius: $border-radius;
                transform: translate(-50%, -50%);
                z-index: 0;
                will-change: opacity;
                opacity: 1;
                transition: opacity 0.2s cubic-bezier(0.0, 0.0, 0.2, 1);

                // Inner shadow
                box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.3);
            }

            &:before {
                color: $color-primary;
                transition: color 0s;
            }
        }

        &:disabled,
        &.disabled {
            color: $color-gray-2;
            cursor: not-allowed;
        }

        &::after {
            // Breakout region
            // Increase touch area by 15pixels
            content: '';
            position: absolute;
            top: -10px;
            left: -10px;
            right: -10px;
            bottom: -10px;
        }


        position: relative;

        &:is(a), &:is(button), label & {
            @media (pointer: coarse) {
                &:before {
                    transition: opacity 0.2s ease-out;
                }

                &:active {
                    &:before {
                        opacity: 0.15;
                        transition: opacity 0s;
                    }
                }
            }

            @media (pointer: fine) {
                position: relative;
                opacity: 1;

                &:after {
                    content: "";
                    position: absolute;
                    left: 50% !important;
                    right: auto !important;
                    width: 34px;
                    height: 34px;
                    top: 50% !important;
                    bottom: auto !important;
                    background-color: var(--color-current-background-shade, #{$color-background-shade});
                    border-radius: $border-radius;
                    transform: translate(-50%, -50%);
                    z-index: 0;
                    will-change: opacity;
                    opacity: 0;
                    transition: opacity 0.2s cubic-bezier(0.0, 0.0, 0.2, 1);
                }

                &:before {
                    transition: color 0.2s ease-out;
                }

                &:active {
                    &:before {
                        color: $color-dark;
                        transition: color 0s;
                    }
                }

                &.small {
                    &:after {
                        width: 30px;
                        height: 30px;
                    }
                }

                &:before {
                    z-index: 1;
                }

                &.active, &:hover, &:active {
                    &:after {

                        opacity: 1;
                        transform: translate(-50%, -50%);

                        transition: opacity 0.2s cubic-bezier(0.0, 0.0, 0.2, 1);
                    }
                }

                &:active {
                    &:after {
                        background-color: $color-gray-3;
                    }
                }
                
            }
        }

        body.web-android &, body.native-android & {
            transition: none;
            &:active {
                &:before {
                opacity: 1;
                transition: none;
                }
            }

            &:after {
                content: "";
                position: absolute;
                left: 50% !important;
                right: auto !important;
                width: 50px;
                height: 50px;
                top: 50% !important;
                bottom: auto !important;
                background: $color-gray-3;
                border-radius: 200px;
                pointer-events: none;

                transform: translate(-50%, -50%) scale(0.05, 0.05) ;
                z-index: 0;

                will-change: opacity, transform;
                opacity: 0;

                transition: opacity 0.2s cubic-bezier(0.0, 0.0, 0.2, 1), transform 0.2s 0.2s cubic-bezier(0.0, 0.0, 0.2, 1);;


            }

            &:before {
                z-index: 1;
            }

            &.active {
                opacity: 1;
                &:after {

                    opacity: 1;
                    transform: translate(-50%, -50%) scale(1, 1);

                    transition: opacity 0.2s cubic-bezier(0.0, 0.0, 0.2, 1), transform 0.2s cubic-bezier(0.0, 0.0, 0.2, 1);
                }
            }
        }
    }
}

.button.navigation {
    font-size: 17px;
    font-weight: $font-weight-semibold;
    color: $color-gray-4;

    overflow: visible;

    // Visually correct back button
    &:first-child > .icon.arrow-back:first-child {
        margin-left: -4px;
    }

    body.native-iOS &, body.web-iOS & {
        color: $color-primary;

        // Visually correct back button
        &:first-child > .icon.arrow-back:first-child {
            margin-left: -9px;
            margin-right: 0px;
        }
    }

    body.native-android &, body.web-android & {
        color: $color-dark;
    }

    &.highlight {
        font-weight: $font-weight-semibold;
    }

    &:disabled, &.disabled {
        color: $color-gray-2 !important;
        box-shadow: none;
        cursor: not-allowed;

        &:active {
            transform: none;
        }
    }
}

// Non clickable button
span.button.text {
    height: 24px;
    line-height: 24px;
}
